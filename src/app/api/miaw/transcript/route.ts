/*
  This API route retrieves conversation transcript from MIAW API.
  Returns JSON response with transcript data (PDF auto-generated by MIAW).
  Uses only Authorization header as required by MIAW transcript endpoint.
*/

import { NextRequest, NextResponse } from "next/server";
import { MiawApiClient } from "@/app/lib/miawApiService";

export async function GET(req: NextRequest) {
  try {
    // Get conversationId from session cookie
    const sessionCookie = req.cookies.get('miawChatSession');
    
    if (!sessionCookie?.value) {
      return NextResponse.json(
        { error: "No active session found" },
        { status: 401 }
      );
    }

    let sessionData;
    try {
      sessionData = JSON.parse(sessionCookie.value);
    } catch (error) {
      return NextResponse.json(
        { error: "Invalid session data" },
        { status: 401 }
      );
    }

    const conversationId = sessionData.conversationId;

    if (!conversationId) {
      return NextResponse.json(
        { error: "No conversation found in session" },
        { status: 400 }
      );
    }

    // Initialize MIAW API client
    const miawClient = MiawApiClient.getInstance();

    // Get conversation transcript (uses only Authorization header)
    const transcriptData = await miawClient.getConversationTranscript(conversationId);

    // Return the JSON response directly from MIAW API
    // Media type: application/octet-stream (PDF auto-generated by MIAW)
    return NextResponse.json(transcriptData, { status: 200 });

  } catch (error) {
    console.error("Error retrieving conversation transcript:", error);
    
    return NextResponse.json(
      { 
        error: "Failed to retrieve transcript", 
        message: error instanceof Error ? error.message : "Unknown error" 
      },
      { status: 500 }
    );
  }
}
